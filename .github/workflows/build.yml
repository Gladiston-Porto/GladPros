# .github/workflows/build.yml
name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: Check environment variables
      run: node scripts/check-build-env.js
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'temporary-jwt-secret-for-build-only-32-chars' }}
        CLIENT_DOC_ENCRYPTION_KEY_BASE64: ${{ secrets.CLIENT_DOC_ENCRYPTION_KEY_BASE64 || 'dGVtcG9yYXJ5LWVuY3J5cHRpb24ta2V5LWZvci1idWlsZA==' }}
        DATABASE_URL: ${{ secrets.DATABASE_URL || 'mysql://user:pass@localhost:3306/temp_build_db' }}

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build application
      run: npm run build
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'temporary-jwt-secret-for-build-only-32-chars' }}
        CLIENT_DOC_ENCRYPTION_KEY_BASE64: ${{ secrets.CLIENT_DOC_ENCRYPTION_KEY_BASE64 || 'dGVtcG9yYXJ5LWVuY3J5cHRpb24ta2V5LWZvci1idWlsZA==' }}
        DATABASE_URL: ${{ secrets.DATABASE_URL || 'mysql://user:pass@localhost:3306/temp_build_db' }}
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'http://localhost:3000' }}
        NEXT_PHASE: 'phase-production-build'

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nextjs-build
        path: .next/
