(()=>{var e={};e.id=3136,e.ids=[2833,3136],e.modules={1708:e=>{"use strict";e.exports=require("node:process")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7066:e=>{"use strict";e.exports=require("node:tty")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},13641:(e,t,i)=>{"use strict";i.d(t,{z:()=>s.z});var s=i(31183)},16698:e=>{"use strict";e.exports=require("node:async_hooks")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},31183:(e,t,i)=>{"use strict";i.d(t,{z:()=>a});var s=i(29942);let a=global.__prisma??new s.PrismaClient({log:["error"]})},31421:e=>{"use strict";e.exports=require("node:child_process")},33873:e=>{"use strict";e.exports=require("path")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},48161:e=>{"use strict";e.exports=require("node:os")},51455:e=>{"use strict";e.exports=require("node:fs/promises")},52360:(e,t,i)=>{"use strict";i.r(t),i.d(t,{patchFetch:()=>m,routeModule:()=>c,serverHooks:()=>v,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>l});var s={};i.r(s),i.d(s,{GET:()=>u});var a=i(96559),r=i(48088),o=i(37719),n=i(32190),d=i(92833);async function u(e){try{let t,{searchParams:i}=new URL(e.url),s=i.get("type")||"failed-logins",a=parseInt(i.get("limit")||"100"),r=parseInt(i.get("hours")||"24"),o=i.get("userId"),u=o?parseInt(o):void 0;switch(s){case"login-attempts":t=u&&!Number.isNaN(u)?await d.SecurityService.getLoginAttemptsByUser(u,a):await d.SecurityService.getLoginAttempts(a);break;case"failed-logins":t=await d.SecurityService.getFailedLogins(r);break;case"active-sessions":t=await d.SecurityService.getActiveSessions();break;default:return n.NextResponse.json({message:"Tipo de relat\xf3rio inv\xe1lido"},{status:400})}return n.NextResponse.json({type:s,results:t,count:t.length})}catch(e){return console.error("Erro ao gerar relat\xf3rio:",e),n.NextResponse.json({message:"Erro interno do servidor"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/security/reports/route",pathname:"/api/security/reports",filename:"route",bundlePath:"app/api/security/reports/route"},resolvedPagePath:"C:\\Users\\gladi\\Documents\\gladpros-nextjs\\src\\app\\api\\security\\reports\\route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:p,workUnitAsyncStorage:l,serverHooks:v}=c;function m(){return(0,o.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:l})}},55511:e=>{"use strict";e.exports=require("crypto")},57975:e=>{"use strict";e.exports=require("node:util")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73024:e=>{"use strict";e.exports=require("node:fs")},76760:e=>{"use strict";e.exports=require("node:path")},77598:e=>{"use strict";e.exports=require("node:crypto")},78335:()=>{},78474:e=>{"use strict";e.exports=require("node:events")},92833:(e,t,i)=>{"use strict";i.d(t,{SecurityService:()=>u});var s=i(13641),a=i(18318),r=i(55511),o=i.n(r);function n(){return s.z.historicoSenha}function d(){return s.z.tentativaLogin}class u{static async createSession(e,t,i){let a=o().randomBytes(32).toString("hex");try{await this.cleanExpiredSessions()}catch{}try{await this.revokeAllUserSessions(e)}catch{}let r=s.z.sessaoAtiva;return r?.create?await r.create({data:{usuarioId:e,token:a,ip:t||null,userAgent:i||null}}):await s.z.$executeRaw`
        INSERT INTO SessaoAtiva (usuarioId, token, ip, userAgent, ultimaAtividade, criadoEm)
        VALUES (${e}, ${a}, ${t||null}, ${i||null}, NOW(), NOW())
      `,a}static async updateSessionActivity(e){let t=s.z.sessaoAtiva;if(t?.update)return void await t.update({where:{token:e},data:{ultimaAtividade:new Date}}).catch(()=>{});await s.z.$executeRaw`
      UPDATE SessaoAtiva SET ultimaAtividade = NOW() WHERE token = ${e}
    `}static async getUserSessions(e){let t,i=s.z.sessaoAtiva;return(i?.findMany?await i.findMany({where:{usuarioId:e},orderBy:{ultimaAtividade:"desc"}}):await s.z.$queryRaw`
        SELECT id, usuarioId, token, ip, userAgent, cidade, pais, ultimaAtividade, criadoEm
        FROM SessaoAtiva
        WHERE usuarioId = ${e}
        ORDER BY ultimaAtividade DESC
      `).map(e=>({id:e.id,token:e.token,ip:e.ip||void 0,userAgent:e.userAgent||void 0,cidade:e.cidade||void 0,pais:e.pais||void 0,ultimaAtividade:e.ultimaAtividade,criadoEm:e.criadoEm}))}static async revokeSession(e){let t=s.z.sessaoAtiva;if(t?.delete)return void await t.delete({where:{id:e}}).catch(()=>{});await s.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE id = ${e}
    `}static async revokeSessionByToken(e){let t=s.z.sessaoAtiva;if(t?.deleteMany)return void await t.deleteMany({where:{token:e}});await s.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE token = ${e}
    `}static async revokeAllUserSessions(e){let t=s.z.sessaoAtiva;if(t?.deleteMany)return void await t.deleteMany({where:{usuarioId:e}});await s.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE usuarioId = ${e}
    `}static async cleanExpiredSessions(){let e=new Date(Date.now()-864e5),t=s.z.sessaoAtiva;if(t?.deleteMany)return void await t.deleteMany({where:{ultimaAtividade:{lt:e}}});await s.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE ultimaAtividade < ${e}
    `}static async addPasswordToHistory(e,t){await n().create({data:{usuarioId:e,senhaHash:t}});let i=await n().findMany({where:{usuarioId:e},orderBy:{criadaEm:"desc"},skip:5,select:{id:!0}});i.length>0&&await n().deleteMany({where:{id:{in:i.map(e=>e.id)}}})}static async isPasswordReused(e,t){for(let i of(await n().findMany({where:{usuarioId:e},orderBy:{criadaEm:"desc"},take:5,select:{senhaHash:!0}})))if(await a.default.compare(t,i.senhaHash))return!0;return!1}static async getLoginAttempts(e=100){return(await d().findMany({orderBy:{criadaEm:"desc"},take:e,select:{id:!0,email:!0,ip:!0,userAgent:!0,sucesso:!0,criadaEm:!0}})).map(e=>({id:e.id,email:e.email,ip:e.ip||void 0,userAgent:e.userAgent||void 0,sucesso:e.sucesso,criadoEm:e.criadaEm}))}static async getFailedLogins(e=24){let t=new Date(Date.now()-60*e*6e4);return(await d().findMany({where:{sucesso:!1,criadaEm:{gt:t}},orderBy:{criadaEm:"desc"},select:{id:!0,email:!0,ip:!0,userAgent:!0,sucesso:!0,criadaEm:!0}})).map(e=>({id:e.id,email:e.email,ip:e.ip||void 0,userAgent:e.userAgent||void 0,sucesso:e.sucesso,criadoEm:e.criadaEm}))}static async getLoginAttemptsByUser(e,t=100){return(await s.z.$queryRaw`
      SELECT id, email, ip, userAgent, sucesso, motivo, criadaEm
      FROM TentativaLogin
      WHERE usuarioId = ${e}
      ORDER BY criadaEm DESC
      LIMIT ${t}
    `).map(e=>({id:e.id,email:e.email,ip:e.ip||void 0,userAgent:e.userAgent||void 0,sucesso:e.sucesso,motivoFalha:e.motivo||void 0,criadoEm:e.criadaEm}))}static async getActiveSessions(){return(await s.z.sessaoAtiva.findMany({include:{usuario:{select:{nomeCompleto:!0,email:!0}}},orderBy:{ultimaAtividade:"desc"}})).map(e=>({id:e.id,token:e.token,ip:e.ip||void 0,userAgent:e.userAgent||void 0,cidade:e.cidade||void 0,pais:e.pais||void 0,ultimaAtividade:e.ultimaAtividade,criadoEm:e.criadoEm}))}}},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var i=e=>t(t.s=e),s=t.X(0,[7719,580,9942,8318],()=>i(52360));module.exports=s})();