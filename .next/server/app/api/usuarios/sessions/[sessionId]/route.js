(()=>{var e={};e.id=413,e.ids=[413,2833],e.modules={1708:e=>{"use strict";e.exports=require("node:process")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7066:e=>{"use strict";e.exports=require("node:tty")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},13641:(e,s,t)=>{"use strict";t.d(s,{z:()=>i.z});var i=t(31183)},16698:e=>{"use strict";e.exports=require("node:async_hooks")},29021:e=>{"use strict";e.exports=require("fs")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},31183:(e,s,t)=>{"use strict";t.d(s,{z:()=>a});var i=t(29942);let a=global.__prisma??new i.PrismaClient({log:["error"]})},31421:e=>{"use strict";e.exports=require("node:child_process")},33873:e=>{"use strict";e.exports=require("path")},36965:(e,s,t)=>{"use strict";t.r(s),t.d(s,{patchFetch:()=>m,routeModule:()=>c,serverHooks:()=>v,workAsyncStorage:()=>p,workUnitAsyncStorage:()=>l});var i={};t.r(i),t.d(i,{DELETE:()=>u});var a=t(96559),r=t(48088),o=t(37719),d=t(32190),n=t(92833);async function u(e,{params:s}){try{let{sessionId:e}=await s,t=parseInt(e);if(isNaN(t))return d.NextResponse.json({message:"ID de sess\xe3o inv\xe1lido"},{status:400});return await n.SecurityService.revokeSession(t),d.NextResponse.json({message:"Sess\xe3o revogada com sucesso"})}catch(e){return console.error("Erro ao revogar sess\xe3o:",e),d.NextResponse.json({message:"Erro interno do servidor"},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/usuarios/sessions/[sessionId]/route",pathname:"/api/usuarios/sessions/[sessionId]",filename:"route",bundlePath:"app/api/usuarios/sessions/[sessionId]/route"},resolvedPagePath:"C:\\Users\\gladi\\Documents\\gladpros-nextjs\\src\\app\\api\\usuarios\\sessions\\[sessionId]\\route.ts",nextConfigOutput:"standalone",userland:i}),{workAsyncStorage:p,workUnitAsyncStorage:l,serverHooks:v}=c;function m(){return(0,o.patchFetch)({workAsyncStorage:p,workUnitAsyncStorage:l})}},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},48161:e=>{"use strict";e.exports=require("node:os")},51455:e=>{"use strict";e.exports=require("node:fs/promises")},55511:e=>{"use strict";e.exports=require("crypto")},57975:e=>{"use strict";e.exports=require("node:util")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},73024:e=>{"use strict";e.exports=require("node:fs")},76760:e=>{"use strict";e.exports=require("node:path")},77598:e=>{"use strict";e.exports=require("node:crypto")},78335:()=>{},78474:e=>{"use strict";e.exports=require("node:events")},92833:(e,s,t)=>{"use strict";t.d(s,{SecurityService:()=>u});var i=t(13641),a=t(18318),r=t(55511),o=t.n(r);function d(){return i.z.historicoSenha}function n(){return i.z.tentativaLogin}class u{static async createSession(e,s,t){let a=o().randomBytes(32).toString("hex");try{await this.cleanExpiredSessions()}catch{}try{await this.revokeAllUserSessions(e)}catch{}let r=i.z.sessaoAtiva;return r?.create?await r.create({data:{usuarioId:e,token:a,ip:s||null,userAgent:t||null}}):await i.z.$executeRaw`
        INSERT INTO SessaoAtiva (usuarioId, token, ip, userAgent, ultimaAtividade, criadoEm)
        VALUES (${e}, ${a}, ${s||null}, ${t||null}, NOW(), NOW())
      `,a}static async updateSessionActivity(e){let s=i.z.sessaoAtiva;if(s?.update)return void await s.update({where:{token:e},data:{ultimaAtividade:new Date}}).catch(()=>{});await i.z.$executeRaw`
      UPDATE SessaoAtiva SET ultimaAtividade = NOW() WHERE token = ${e}
    `}static async getUserSessions(e){let s,t=i.z.sessaoAtiva;return(t?.findMany?await t.findMany({where:{usuarioId:e},orderBy:{ultimaAtividade:"desc"}}):await i.z.$queryRaw`
        SELECT id, usuarioId, token, ip, userAgent, cidade, pais, ultimaAtividade, criadoEm
        FROM SessaoAtiva
        WHERE usuarioId = ${e}
        ORDER BY ultimaAtividade DESC
      `).map(e=>({id:e.id,token:e.token,ip:e.ip||void 0,userAgent:e.userAgent||void 0,cidade:e.cidade||void 0,pais:e.pais||void 0,ultimaAtividade:e.ultimaAtividade,criadoEm:e.criadoEm}))}static async revokeSession(e){let s=i.z.sessaoAtiva;if(s?.delete)return void await s.delete({where:{id:e}}).catch(()=>{});await i.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE id = ${e}
    `}static async revokeSessionByToken(e){let s=i.z.sessaoAtiva;if(s?.deleteMany)return void await s.deleteMany({where:{token:e}});await i.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE token = ${e}
    `}static async revokeAllUserSessions(e){let s=i.z.sessaoAtiva;if(s?.deleteMany)return void await s.deleteMany({where:{usuarioId:e}});await i.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE usuarioId = ${e}
    `}static async cleanExpiredSessions(){let e=new Date(Date.now()-864e5),s=i.z.sessaoAtiva;if(s?.deleteMany)return void await s.deleteMany({where:{ultimaAtividade:{lt:e}}});await i.z.$executeRaw`
      DELETE FROM SessaoAtiva WHERE ultimaAtividade < ${e}
    `}static async addPasswordToHistory(e,s){await d().create({data:{usuarioId:e,senhaHash:s}});let t=await d().findMany({where:{usuarioId:e},orderBy:{criadaEm:"desc"},skip:5,select:{id:!0}});t.length>0&&await d().deleteMany({where:{id:{in:t.map(e=>e.id)}}})}static async isPasswordReused(e,s){for(let t of(await d().findMany({where:{usuarioId:e},orderBy:{criadaEm:"desc"},take:5,select:{senhaHash:!0}})))if(await a.default.compare(s,t.senhaHash))return!0;return!1}static async getLoginAttempts(e=100){return(await n().findMany({orderBy:{criadaEm:"desc"},take:e,select:{id:!0,email:!0,ip:!0,userAgent:!0,sucesso:!0,criadaEm:!0}})).map(e=>({id:e.id,email:e.email,ip:e.ip||void 0,userAgent:e.userAgent||void 0,sucesso:e.sucesso,criadoEm:e.criadaEm}))}static async getFailedLogins(e=24){let s=new Date(Date.now()-60*e*6e4);return(await n().findMany({where:{sucesso:!1,criadaEm:{gt:s}},orderBy:{criadaEm:"desc"},select:{id:!0,email:!0,ip:!0,userAgent:!0,sucesso:!0,criadaEm:!0}})).map(e=>({id:e.id,email:e.email,ip:e.ip||void 0,userAgent:e.userAgent||void 0,sucesso:e.sucesso,criadoEm:e.criadaEm}))}static async getLoginAttemptsByUser(e,s=100){return(await i.z.$queryRaw`
      SELECT id, email, ip, userAgent, sucesso, motivo, criadaEm
      FROM TentativaLogin
      WHERE usuarioId = ${e}
      ORDER BY criadaEm DESC
      LIMIT ${s}
    `).map(e=>({id:e.id,email:e.email,ip:e.ip||void 0,userAgent:e.userAgent||void 0,sucesso:e.sucesso,motivoFalha:e.motivo||void 0,criadoEm:e.criadaEm}))}static async getActiveSessions(){return(await i.z.sessaoAtiva.findMany({include:{usuario:{select:{nomeCompleto:!0,email:!0}}},orderBy:{ultimaAtividade:"desc"}})).map(e=>({id:e.id,token:e.token,ip:e.ip||void 0,userAgent:e.userAgent||void 0,cidade:e.cidade||void 0,pais:e.pais||void 0,ultimaAtividade:e.ultimaAtividade,criadoEm:e.criadoEm}))}}},96487:()=>{}};var s=require("../../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),i=s.X(0,[7719,580,9942,8318],()=>t(36965));module.exports=i})();