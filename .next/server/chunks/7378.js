exports.id=7378,exports.ids=[5508,7378],exports.modules={13641:(e,t,a)=>{"use strict";a.d(t,{z:()=>o.z});var o=a(31183)},30776:(e,t,a)=>{"use strict";a.d(t,{g:()=>i});var o=a(13641);class i{static async log(e){try{console.log(`[AUDIT] ${e.status} - ${e.action}`,{user:e.userEmail||`ID:${e.userId}`||"Anonymous",resource:e.resource?`${e.resource}${e.resourceId?`:${e.resourceId}`:""}`:void 0,ip:e.ip,details:e.details,timestamp:e.timestamp||new Date});let t="LOGIN";switch(e.action){case"LOGIN_ATTEMPT":case"LOGIN":default:t="LOGIN";break;case"LOGOUT":t="LOGOUT";break;case"CREATE":case"CREATE_USER":t="CREATE";break;case"UPDATE":case"UPDATE_USER":t="UPDATE";break;case"DELETE":case"DELETE_USER":t="DELETE"}await o.z.auditoria.create({data:{tabela:e.resource||"system",registroId:e.resourceId?parseInt(e.resourceId):0,acao:t,usuarioId:e.userId||null,ip:e.ip||null,payload:e.details?JSON.stringify({action:e.action,status:e.status,userAgent:e.userAgent,...e.details}):void 0}}).catch(e=>{console.error("[AUDIT] Erro ao salvar no modelo Auditoria:",e)})}catch(e){console.error("[AUDIT] Erro no sistema de auditoria:",e)}}static getClientInfo(e){let t=e.headers.get("x-forwarded-for");return{ip:t?t.split(",")[0].trim():e.headers.get("x-real-ip")||e.headers.get("cf-connecting-ip")||"unknown",userAgent:e.headers.get("user-agent")||"unknown"}}static async logLogin(e,t,a,o,i){let{ip:s,userAgent:r}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"LOGIN_ATTEMPT",details:{success:o,...i},ip:s,userAgent:r,status:o?"SUCCESS":"FAILURE"})}static async logLogout(e,t,a){let{ip:o,userAgent:i}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"LOGOUT",ip:o,userAgent:i,status:"SUCCESS"})}static async logMFA(e,t,a,o,i){let{ip:s,userAgent:r}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"MFA_VERIFICATION",details:{success:o,attempts:i,timestamp:new Date},ip:s,userAgent:r,status:o?"SUCCESS":"FAILURE"})}static async logPasswordChange(e,t,a,o){let{ip:i,userAgent:s}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"PASSWORD_CHANGE",details:{type:o,timestamp:new Date},ip:i,userAgent:s,status:"SUCCESS"})}static async logFirstAccess(e,t,a){let{ip:o,userAgent:i}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"FIRST_ACCESS_SETUP",details:{completedAt:new Date},ip:o,userAgent:i,status:"SUCCESS"})}static async logUnauthorizedAccess(e,t){let{ip:a,userAgent:o}=this.getClientInfo(e);await this.log({action:"UNAUTHORIZED_ACCESS",resource:t,details:{attemptedUrl:e.url,method:e.method},ip:a,userAgent:o,status:"WARNING"})}static async logDataAccess(e,t,a,o,i){let{ip:s,userAgent:r}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"DATA_ACCESS",resource:o,resourceId:i,details:{method:a.method,url:a.url},ip:s,userAgent:r,status:"SUCCESS"})}static async logDataModification(e,t,a,o,i,s,r){let{ip:n,userAgent:u}=this.getClientInfo(a);await this.log({userId:e,userEmail:t,action:"DATA_MODIFICATION",resource:o,resourceId:i,details:{operation:s,changes:r,timestamp:new Date},ip:n,userAgent:u,status:"SUCCESS"})}static async getLogs(e){try{return console.log("[AUDIT] Buscando logs com filtros:",e),{logs:[],total:0,hasMore:!1}}catch(e){return console.error("[AUDIT] Erro ao buscar logs:",e),{logs:[],total:0,hasMore:!1}}}}},31183:(e,t,a)=>{"use strict";a.d(t,{z:()=>i});var o=a(29942);let i=global.__prisma??new o.PrismaClient({log:["error"]})},35508:(e,t,a)=>{"use strict";a.d(t,{BlockingService:()=>i});var o=a(13641);class i{static get tentativaDelegate(){return o.z.tentativaLogin}static get usuarioDelegate(){if("1"===process.env.USE_PRISMA_DELEGATES)return o.z.usuario}static{this.BLOCK_THRESHOLDS=[{attempts:5,blockMinutes:1},{attempts:8,blockMinutes:5},{attempts:12,blockMinutes:30},{attempts:15,blockMinutes:120},{attempts:20,blockMinutes:0}]}static async recordFailedAttempt({userId:e,email:t,ip:a,userAgent:i,motivo:s}){this.tentativaDelegate?.create?await this.tentativaDelegate.create({data:{usuarioId:e??null,email:t??"unknown",sucesso:!1,ip:a??null,userAgent:i??null,motivo:s||null}}):await o.z.$executeRaw`
        INSERT INTO TentativaLogin (usuarioId, email, sucesso, ip, userAgent, motivo)
        VALUES (${e||null}, ${t||"unknown"}, FALSE, ${a||null}, ${i||null}, ${s||null})
      `,e&&await this.updateUserBlockStatus(e)}static async clearFailedAttempts(e){this.usuarioDelegate?.update?await this.usuarioDelegate.update({where:{id:e},data:{bloqueado:!1,bloqueadoEm:null}}):await o.z.$executeRaw`
        UPDATE Usuario 
        SET bloqueado = FALSE, bloqueadoEm = NULL 
        WHERE id = ${e}
      `}static async checkUserBlock(e){let t=this.usuarioDelegate?.findUnique?await this.usuarioDelegate.findUnique({where:{id:e},select:{bloqueado:!0,bloqueadoEm:!0,pinSeguranca:!0,perguntaSecreta:!0}}):(await o.z.$queryRaw`
          SELECT bloqueado, bloqueadoEm, pinSeguranca, perguntaSecreta
          FROM Usuario 
          WHERE id = ${e}
        `)[0];if(!t||!t.bloqueado||!t.bloqueadoEm)return{blocked:!1};let a=await this.getFailedAttemptCount(e),i=this.getBlockThreshold(a);if(0===i.blockMinutes)return{blocked:!0,requiresPinUnlock:!!t.pinSeguranca,requiresSecurityQuestion:!!t.perguntaSecreta,attemptCount:a};if(!t.bloqueadoEm)return{blocked:!1};let s=new Date(t.bloqueadoEm.getTime()+60*i.blockMinutes*1e3);return new Date>=s?(this.usuarioDelegate?.update?await this.usuarioDelegate.update({where:{id:e},data:{bloqueado:!1,bloqueadoEm:null}}):await o.z.$executeRaw`
          UPDATE Usuario 
          SET bloqueado = FALSE, bloqueadoEm = NULL 
          WHERE id = ${e}
        `,{blocked:!1}):{blocked:!0,unlockAt:s,requiresPinUnlock:!!t.pinSeguranca,requiresSecurityQuestion:!!t.perguntaSecreta,attemptCount:a}}static async updateUserBlockStatus(e){await this.getFailedAttemptCount(e)>=5&&(this.usuarioDelegate?.update?await this.usuarioDelegate.update({where:{id:e},data:{bloqueado:!0,bloqueadoEm:new Date}}):await o.z.$executeRaw`
          UPDATE Usuario 
          SET bloqueado = TRUE, bloqueadoEm = NOW() 
          WHERE id = ${e}
        `)}static async getFailedAttemptCount(e){let t=await o.z.$queryRaw`
      SELECT COUNT(*) as count
      FROM TentativaLogin 
      WHERE usuarioId = ${e}
        AND sucesso = FALSE
        AND criadaEm > COALESCE(
          (SELECT MAX(criadaEm) FROM TentativaLogin WHERE usuarioId = ${e} AND sucesso = TRUE),
          DATE_SUB(NOW(), INTERVAL 24 HOUR)
        )
        AND criadaEm > DATE_SUB(NOW(), INTERVAL 24 HOUR)
    `;return t[0]?.count||0}static getBlockThreshold(e){for(let t of this.BLOCK_THRESHOLDS)if(e<=t.attempts)return t;return this.BLOCK_THRESHOLDS[this.BLOCK_THRESHOLDS.length-1]}static async unlockWithPin(e,t){let i=this.usuarioDelegate?.findUnique?await this.usuarioDelegate.findUnique({where:{id:e},select:{pinSeguranca:!0,bloqueado:!0}}):(await o.z.$queryRaw`
          SELECT pinSeguranca, bloqueado
          FROM Usuario 
          WHERE id = ${e}
        `)[0];if(!i)return{success:!1,error:"Usu\xe1rio n\xe3o encontrado"};if(!i.bloqueado)return{success:!1,error:"Usu\xe1rio n\xe3o est\xe1 bloqueado"};if(!i.pinSeguranca)return{success:!1,error:"PIN de seguran\xe7a n\xe3o cadastrado"};let s=await a.e(8318).then(a.bind(a,18318));return await s.compare(t,i.pinSeguranca)?(await this.clearFailedAttempts(e),{success:!0}):{success:!1,error:"PIN inv\xe1lido"}}static async unlockWithSecurityQuestion(e,t){let i=this.usuarioDelegate?.findUnique?await this.usuarioDelegate.findUnique({where:{id:e},select:{respostaSecreta:!0,bloqueado:!0}}):(await o.z.$queryRaw`
          SELECT respostaSecreta, bloqueado
          FROM Usuario 
          WHERE id = ${e}
        `)[0];if(!i)return{success:!1,error:"Usu\xe1rio n\xe3o encontrado"};if(!i.bloqueado)return{success:!1,error:"Usu\xe1rio n\xe3o est\xe1 bloqueado"};if(!i.respostaSecreta)return{success:!1,error:"Resposta de seguran\xe7a n\xe3o cadastrada"};let s=await a.e(8318).then(a.bind(a,18318));return await s.compare(t.toLowerCase().trim(),i.respostaSecreta)?(await this.clearFailedAttempts(e),{success:!0}):{success:!1,error:"Resposta inv\xe1lida"}}}},69812:(e,t,a)=>{"use strict";a.d(t,{B0:()=>E,Dm:()=>I,E9:()=>S,KS:()=>g,PQ:()=>U,X5:()=>d,Zk:()=>h,cQ:()=>C,if:()=>T,rf:()=>m,tT:()=>p,yp:()=>A});var o=a(24501);let i=o.Yj().email("Email inv\xe1lido").max(255,"Email muito longo").toLowerCase().trim(),s=o.Yj().min(6,"Senha deve ter pelo menos 6 caracteres").max(128,"Senha muito longa").refine(e=>!!/[a-z]/.test(e)&&!!/[A-Z0-9]/.test(e),"Senha deve conter pelo menos: 1 letra min\xfascula e 1 mai\xfascula ou n\xfamero"),r=o.Yj().min(2,"Nome deve ter pelo menos 2 caracteres").max(100,"Nome muito longo").trim().refine(e=>/^[a-zA-ZÀ-ÿ\s]+$/.test(e),"Nome deve conter apenas letras e espa\xe7os"),n=o.Yj().length(4,"PIN deve ter exatamente 4 d\xedgitos").refine(e=>/^\d{4}$/.test(e),"PIN deve conter apenas n\xfameros"),u=o.Yj().length(6,"C\xf3digo MFA deve ter exatamente 6 d\xedgitos").refine(e=>/^\d{6}$/.test(e),"C\xf3digo MFA deve conter apenas n\xfameros"),l=o.Yj().min(5,"Pergunta de seguran\xe7a muito curta").max(200,"Pergunta de seguran\xe7a muito longa").trim(),c=o.Yj().min(2,"Resposta muito curta").max(100,"Resposta muito longa").trim().toLowerCase(),d=o.Ik({email:i,password:o.Yj().min(1,"Senha \xe9 obrigat\xf3ria")}),m=o.Ik({userId:o.ai().int().positive("ID do usu\xe1rio inv\xe1lido"),code:u,tipoAcao:o.k5(["LOGIN","PRIMEIRO_ACESSO","RESET_PASSWORD"]).optional()}),E=o.Ik({email:i});o.Ik({userId:o.ai().int().positive("ID do usu\xe1rio inv\xe1lido"),novaSenha:s,pin:n,perguntaSeguranca:l,respostaSeguranca:c});let p=o.Ik({userId:o.ai().int().positive("ID do usu\xe1rio inv\xe1lido"),newPassword:s,pin:n,securityQuestion:l,securityAnswer:c});o.Ik({token:o.Yj().min(1,"Token \xe9 obrigat\xf3rio"),novaSenha:s});let g=o.Ik({token:o.Yj().min(1,"Token \xe9 obrigat\xf3rio"),senha:s}),S=o.Ik({email:i}),I=o.Ik({email:i});o.Ik({nomeCompleto:r,email:i,tipo:o.k5(["ADMIN","USUARIO","CLIENTE"]),departamento:o.Yj().max(100,"Departamento muito longo").optional(),cargo:o.Yj().max(100,"Cargo muito longo").optional()}),o.Ik({nomeCompleto:r.optional(),email:i.optional(),tipo:o.k5(["ADMIN","USUARIO","CLIENTE"]).optional(),departamento:o.Yj().max(100,"Departamento muito longo").optional(),cargo:o.Yj().max(100,"Cargo muito longo").optional(),status:o.k5(["ATIVO","INATIVO","SUSPENSO"]).optional()}).refine(e=>Object.keys(e).length>0,"Pelo menos um campo deve ser fornecido para atualiza\xe7\xe3o");let A=o.gM("method",[o.Ik({method:o.eu("pin"),userId:o.ai().int().positive("ID do usu\xe1rio inv\xe1lido"),pin:n}),o.Ik({method:o.eu("security"),userId:o.ai().int().positive("ID do usu\xe1rio inv\xe1lido"),answer:c})]),h=o.Ik({userId:o.ai().int().positive("ID do usu\xe1rio inv\xe1lido"),tipoAcao:o.k5(["LOGIN","PRIMEIRO_ACESSO","RESET_PASSWORD","RESET","DESBLOQUEIO"]).optional()}),D=o.Ik({nomeCompleto:o.Yj().optional(),email:i,role:o.Yj().optional(),ativo:o.zM().optional(),criadoEm:o.KC([o.Yj(),o.ai(),o.p6()]).optional()}),T=o.Ik({filename:o.Yj().min(1).max(128).optional(),users:o.YO(D).min(1)}),C=o.Ik({email:i.optional(),nomeCompleto:r.optional(),role:o.k5(["ADMIN","GERENTE","USUARIO","FINANCEIRO","ESTOQUE","CLIENTE"]).optional(),status:o.k5(["ATIVO","INATIVO"]).optional(),telefone:o.Yj().max(32).optional().or(o.eu("")).transform(e=>e||void 0).refine(e=>{if(!e)return!0;let t=e.replace(/\D/g,"");return t.length>=10&&t.length<=11},"Telefone deve ter entre 10 e 11 d\xedgitos. Exemplo: (11)99999-9999"),dataNascimento:o.KC([o.Yj(),o.p6()]).optional().transform(e=>{if(!e)return;if(e instanceof Date){if(isNaN(e.getTime()))return;let t=e.getFullYear(),a=String(e.getMonth()+1).padStart(2,"0"),o=String(e.getDate()).padStart(2,"0");return`${t}-${a}-${o}`}let t=String(e).trim();if(t.match(/^(\d{4})-(\d{2})-(\d{2})$/))return t;let a=t.match(/^(\d{1,2})\/(\d{1,2})\/(\d{4})$/);if(a){let[,e,t,o]=a,i=parseInt(t,10),s=parseInt(e,10);if(s<1||s>12||i<1||i>31)return"INVALID_DATE";let r=t.padStart(2,"0"),n=e.padStart(2,"0");return`${o}-${n}-${r}`}return"INVALID_DATE"}).refine(e=>!e||"INVALID_DATE"!==e&&!isNaN(new Date(e+"T00:00:00.000Z").getTime()),"Data de nascimento inv\xe1lida. Use o formato MM/DD/YYYY (ex: 05/18/1979)"),endereco1:o.Yj().max(191).optional().or(o.eu("")).transform(e=>e||void 0),endereco2:o.Yj().max(191).optional().or(o.eu("")).transform(e=>e||void 0),cidade:o.Yj().max(96).optional().or(o.eu("")).transform(e=>e||void 0),estado:o.Yj().max(32).optional().or(o.eu("")).transform(e=>e||void 0),cep:o.Yj().max(16).optional().or(o.eu("")).transform(e=>e||void 0).refine(e=>{if(!e)return!0;let t=e.replace(/\D/g,"");return t.length>=5&&t.length<=9&&t===e.replace(/\D/g,"")},"CEP deve conter apenas n\xfameros. Exemplo: 01234567"),anotacoes:o.Yj().optional().or(o.eu("")).transform(e=>e&&e.trim().length>0?e:void 0)}),U=o.Ik({ativo:o.zM()})},78335:()=>{},96487:()=>{}};